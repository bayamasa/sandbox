{"ast":null,"code":"import React from 'react';\nconst USER_PASS = 'nju33:secret';\n\nconst sendUnauthorized = res => {\n  res.writeHead(401, {\n    'www-authenticate': 'Basic realm=secret string'\n  });\n  res.end();\n};\n\nPage.getInitialProps = ({\n  req,\n  res\n}) => {\n  if (!false) {\n    const authorization = req.headers['authorization'];\n\n    if (typeof authorization === 'undefined') {\n      sendUnauthorized(res);\n      return;\n    }\n\n    const matches = authorization.match(/[^\\s]+$/);\n\n    if (matches === null) {\n      sendUnauthorized(res);\n      return;\n    }\n\n    const userPass = Buffer.from(matches[0], 'base64').toString();\n\n    if (userPass !== USER_PASS) {\n      sendUnauthorized(res);\n      return;\n    }\n  }\n\n  return {\n    message: 'foo'\n  };\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/masashi/Program/Learing/sandbox/pages/index.jsx"],"names":["React","USER_PASS","sendUnauthorized","res","writeHead","end","Page","getInitialProps","req","authorization","headers","matches","match","userPass","Buffer","from","toString","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,SAAS,GAAG,cAAlB;;AAEA,MAAMC,gBAAgB,GAAGC,GAAG,IAAI;AAC9BA,EAAAA,GAAG,CAACC,SAAJ,CAAc,GAAd,EAAmB;AACjB,wBAAoB;AADH,GAAnB;AAGAD,EAAAA,GAAG,CAACE,GAAJ;AACD,CALD;;AAOAC,IAAI,CAACC,eAAL,GAAuB,CAAC;AAACC,EAAAA,GAAD;AAAML,EAAAA;AAAN,CAAD,KAAgB;AACrC,MAAI,MAAJ,EAAsB;AACpB,UAAMM,aAAa,GAAGD,GAAG,CAACE,OAAJ,CAAY,eAAZ,CAAtB;;AAEA,QAAI,OAAOD,aAAP,KAAyB,WAA7B,EAA0C;AACxCP,MAAAA,gBAAgB,CAACC,GAAD,CAAhB;AACA;AACD;;AAED,UAAMQ,OAAO,GAAGF,aAAa,CAACG,KAAd,CAAoB,SAApB,CAAhB;;AACA,QAAID,OAAO,KAAK,IAAhB,EAAsB;AACpBT,MAAAA,gBAAgB,CAACC,GAAD,CAAhB;AACA;AACD;;AAED,UAAMU,QAAQ,GAAGC,MAAM,CAACC,IAAP,CACfJ,OAAO,CAAC,CAAD,CADQ,EAEf,QAFe,EAGfK,QAHe,EAAjB;;AAKA,QAAIH,QAAQ,KAAKZ,SAAjB,EAA4B;AAC1BC,MAAAA,gBAAgB,CAACC,GAAD,CAAhB;AACA;AACD;AACF;;AAED,SAAO;AAACc,IAAAA,OAAO,EAAE;AAAV,GAAP;AACD,CA3BD;;AA6BA,eAAeX,IAAf","sourcesContent":["import React from 'react'\n\nconst USER_PASS = 'nju33:secret'\n\nconst sendUnauthorized = res => {\n  res.writeHead(401, {\n    'www-authenticate': 'Basic realm=secret string'\n  });\n  res.end();\n};\n\nPage.getInitialProps = ({req, res}) => {\n  if (!process.browser) {\n    const authorization = req.headers['authorization'];\n\n    if (typeof authorization === 'undefined') {\n      sendUnauthorized(res);\n      return;\n    }\n\n    const matches = authorization.match(/[^\\s]+$/);\n    if (matches === null) {\n      sendUnauthorized(res);\n      return;\n    }\n\n    const userPass = Buffer.from(\n      matches[0],\n      'base64'\n    ).toString();\n\n    if (userPass !== USER_PASS) {\n      sendUnauthorized(res);\n      return;\n    }\n  }\n\n  return {message: 'foo'};\n};\n\nexport default Page;\n"]},"metadata":{},"sourceType":"module"}